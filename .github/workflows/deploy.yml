name: Build and Deploy Cloud Sentinel

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build & Push Images to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push backup image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_BACKUP }}:backup-latest -f backup/backup.Dockerfile .
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_BACKUP }}:backup-latest

      - name: Build & Push dashboard image
        run: |
          docker build --no-cache -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_DASHBOARD }}:dashboard-latest -f dashboard/dashboard.Dockerfile .
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_DASHBOARD }}:dashboard-latest

  deploy-dashboard:
    name: SSH Deploy Dashboard to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Decode EC2 SSH key
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            docker login -u AWS -p \$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }}) ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_DASHBOARD }}:dashboard-latest
            docker stop dashboard || true
            docker rm dashboard || true
            docker run -d --name dashboard -p 80:5000 ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_DASHBOARD }}:dashboard-latest
          EOF
